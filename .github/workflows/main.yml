name: Remote Backup Workflow

on:
  push:
    branches:
      - main

jobs:
  backup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH for Server 1
        uses: webfactory/ssh-agent@v0.5.0
        with:
          ssh-private-key: ${{ secrets.PRIVATEKEY }}

      - name: Add SSH keyscan for Server 1
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts

      - name: Create backup directory on Server 1
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.USER }}@${{ secrets.HOST }} "rsync -av ${{ secrets.FILEPATH }} ${{ secrets.BACKUPPATH }}api-${{ github.run_number }}/"

      - name: Remove old backups (build numbers less than the current build)
        run: |
          # Define the current build number
          current_build_number=${{ github.run_number }}

          # SSH into the server and find and remove old backups
          ssh -o StrictHostKeyChecking=no ${{ secrets.USER }}@${{ secrets.HOST }} << EOF
            # Check if the BACKUPPATH exists
            if [ -d "${BACKUPPATH}" ]; then
              echo "Backup path exists: ${BACKUPPATH}"
              
              # Find all backup directories with the pattern 'api-<build_number>'
              for backup in \$(ls -d ${BACKUPPATH}api-*); do
                # Extract the build number from the directory name
                build_number=\$(echo \$backup | sed -E 's/.*api-([0-9]+)\/.*/\1/')
                
                # If the build number is less than the current build number, remove the backup
                if [ "\$build_number" -lt "$current_build_number" ]; then
                  echo "Removing old backup: \$backup"
                  rm -rf "\$backup"
                fi
              done
            else
              echo "Backup path does not exist: ${BACKUPPATH}"
            fi
          EOF
