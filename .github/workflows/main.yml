name: Remote Backup Workflow

on:
  push:
    branches:
      - main

jobs:
  backup:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH for Server 1
        uses: webfactory/ssh-agent@v0.5.0
        with:
          ssh-private-key: ${{ secrets.PRIVATEKEY }}

      - name: Add SSH keyscan for Server 1
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts

      - name: Create backup directory on Server 1
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.USER }}@${{ secrets.HOST }} "rsync -av ${{ secrets.FILEPATH }} ${{ secrets.BACKUPPATH }}api-${{ github.run_number }}/"
      
      - name: Remove old backups (build numbers less than the current build)
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.USER }}@${{ secrets.HOST }} "current_build_number=${{ github.run_number }} && BACKUPPATH=\"${{ secrets.BACKUPPATH }}\" && if [ -d \"\$BACKUPPATH\" ]; then echo \"Backup path exists: \$BACKUPPATH\" && for backup in \$(ls -d \${BACKUPPATH}/api-*); do build_number=\$(echo \$backup | sed -E 's/.*api-([0-9]+).*/\1/') && echo \"Extracted build number: \$build_number\" && if [ -n \"\$build_number\" ] && [ \"\$build_number\" -lt \"\$current_build_number\" ]; then echo \"Removing old backup: \$backup\" && rm -rf \"\$backup\"; else echo \"Skipping backup: \$backup (either not a valid build number or newer than current build)\"; fi; done; else echo \"Backup path does not exist: \$BACKUPPATH\"; fi"
